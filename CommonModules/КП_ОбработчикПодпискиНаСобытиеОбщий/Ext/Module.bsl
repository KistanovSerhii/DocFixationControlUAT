
#Область ПрограммныйИнтерфейс

Процедура ПередПроведениемУатПутевойЛист(Источник, Отказ, РежимПроведения) Экспорт
	
#Область ЗапретПроведенияЕслиВидРаботОтсутствуетВЗУП

	
	тчЗаданиеТрактора = Источник._ЗаданиеТрактора;
	
	Если тчЗаданиеТрактора.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаВидаРаботКодЭлСпр	= "000000001";	
	ПроверкаВидаРаботЭлементСпр = Справочники.КонтрольПроведенияНастройкаРасширения.НайтиПоКоду(ПроверкаВидаРаботКодЭлСпр);
	
	Если ПроверкаВидаРаботЭлементСпр = Неопределено
		ИЛИ ПроверкаВидаРаботЭлементСпр = Справочники.КонтрольПроведенияНастройкаРасширения.ПустаяСсылка() Тогда
		Сообщить("В справочнике ""Контроль проведения настройка расширения""
		| не найден код " + ПроверкаВидаРаботКодЭлСпр + " , что не позволяет проверить необходимость
		| контроля наличия вида работ в ЗУП");
		Отказ = Истина;
		
		Возврат;
		
	КонецЕсли;	
	
	ДатаНачалаКонтроляВидаРабот	= ПроверкаВидаРаботЭлементСпр.ДатаНачалаКонтроля;
	ТребуетПроверкиВидаРабот	= Источник.Дата >= ДатаНачалаКонтроляВидаРабот;
	
	Если НЕ ТребуетПроверкиВидаРабот Тогда
		Возврат;
	КонецЕсли;
	
	данныеКолонкиВидыРабот 	= тчЗаданиеТрактора.ВыгрузитьКолонку("_ВидРаботы");
	мВидыРабот				= ПолучитьКодВидаРабот(данныеКолонкиВидыРабот);
	ГодТехКарты				= Источник.Дата;	
	ДатаНачалаКонтроляИнфо	= ?(ЗначениеЗаполнено(ДатаНачалаКонтроляВидаРабот), ДатаНачалаКонтроляВидаРабот, "по всем датам");
	
	ЗапретПроведенияЕслиВидРаботОтсутствуетВЗУП(мВидыРабот, ГодТехКарты, Отказ, ДатаНачалаКонтроляИнфо);

#КонецОбласти
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Процедура - Запрет проведения документа если Вид Работ отсутствует в ЗУП
//
// Параметры:
//  мВидыРаботКод - Массив ИЗ Строка - Код карточки СправочникСсылка.ВидыРаботСотрудников
//	ГодТехКарты	  - Дата, дата документа документа (Технологические карты в ЗУП) как год (смысл - проверить его наличие)
//  Отказ	      - Булево - свойство "Отказ" проводимого документа
//
Процедура ЗапретПроведенияЕслиВидРаботОтсутствуетВЗУП(мВидыРаботКод, ГодТехКарты, Отказ, ДатаКонтроляИнфо = Неопределено) Экспорт
			
	Ответ = КП_КонтрольПроведенияОбщий.ТехКартыЗУПСодержатВидРаботВГоду(мВидыРаботКод, ГодТехКарты);
	
	Если Ответ.Отказ Тогда
		Отказ = Ответ.Отказ;
		
		текстОшибки = Новый Массив;

		Если ДатаКонтроляИнфо <> Неопределено Тогда
			текстОшибки.Добавить("ru = ""(в настройках указана дата начала проверки -> " + ДатаКонтроляИнфо + ")""");
		КонецЕсли;		
		текстОшибки.Добавить("ru = ""Запрет проведения документа так как вид работ не найден в ЗУП""");
		текстОшибки.Добавить("ru = ""(нет тех.карт за "
		+ Формат(ГодТехКарты, "ДФ=yyyy") 
		+ " год с запрашиваемым видом работ)""");
		
		Для Каждого тОшибки Из текстОшибки Цикл
			Сообщить( НСтр(тОшибки) );
		КонецЦикла;
		
		Для Каждого ВидРаботКод ИЗ Ответ.Данные Цикл		
			Сообщить( ВидРаботКод );
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция - Получить код вида работ
//
// Параметры:
//  данныеКолонкиВидыРабот - Массив ИЗ Структура где Код СправочникСсылка.ВидыРаботСотрудников
// 
// Возвращаемое значение:
//  мВидыРаботКод - Массив ИЗ Строка (Код карточки виды работ)
//
Функция ПолучитьКодВидаРабот(данныеКолонкиВидыРабот)

	мВидыРаботКод = Новый Массив;
	Для Каждого текДанные Из данныеКолонкиВидыРабот Цикл
		мВидыРаботКод.Добавить(текДанные.Код);
	КонецЦикла;
	
	Возврат мВидыРаботКод;

КонецФункции

#КонецОбласти